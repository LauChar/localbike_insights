version: 2

models:

  - name: int_localbike_dataset_aggregated_stocks
    description: "This model contains aggregated information about stocks in each store."
    columns:
      - name: stock_store_product_id
        description: "Primary key, unique identifier for the stock of each product in each store: generated by concatenating store_id and product_id."
        tests:
            - unique
            - not_null
      - name: store_id
        description: "Foreign key linking the stock to its store."
        tests:
          - relationships:
              name: store_id_foreign_key_in_int_localbike_dataset_aggregated_stocks
              to: ref('stg_localbike_dataset__stores')
              field: store_id
      - name : product_id
        description: "Foreign key linking the stock to its product."
        tests:
          - relationships:
              name: product_id_foreign_key_in_int_localbike_dataset_aggregated_stocks
              to: ref('int_localbike_dataset__products')
              field: product_id
      - name : total_stock
        description: "Total stock obtained by summing the stock quantities."

  - name: int_localbike_dataset__best_products
    description: "For each product in each store, this model contains the quantity sold and the total amount earned."
    columns:
      - name: store_product_id
        description: "Primary key, unique identifier for each product in each store: concatenation of store_id and product_id."
        tests:
            - unique
            - not_null
      - name: total_products_sold
        description: "For each product and each store, total quantity of this product sold in this store."
      - name: total_products_sold_amount
        description: "For each product and each store, total amount earned by selling this product in this store."
      - name: store_id
        description: "Foreign key linking the product+stock to its store."
        tests:
          - relationships:
              name: store_id_foreign_key_in_int_localbike_dataset__best_products
              to: ref('stg_localbike_dataset__stores')
              field: store_id
      - name : product_id
        description: "Foreign key linking the product+stock to its product_id."
        tests:
          - relationships:
              name: product_id_foreign_key_in_int_localbike_dataset__best_products
              to: ref('int_localbike_dataset__products')
              field: product_id

  - name: int_localbike_dataset__order_items
    description: "This model adds information from stg_localbike_dataset__orders to stg_localbike_dataset__order_items: customer_id and store_id."
    columns:
      - name: order_item_id
        description: "Primary key, unique identifier for each order item."
        tests:
            - unique
            - not_null

  - name: int_localbike_dataset__orders
    description: "This model adds aggregated information from stg_localbike_dataset__order_items and stg_localbike_dataset__customers to stg_localbike_dataset__orders, including total amount per order."
    columns:
      - name: order_id
        description: "Primary key, unique identifier for each order."
        tests:
            - unique
            - not_null
      - name: total_order_amount
        description: "Total amount spent per order, obtained by summing the total amount spent per order_item."
      - name: total_items
        description: "Total number of items per order, obtained by summing the product_quantity per order_item."
      - name: total_distinct_items
        description: "Total distinct number of products per order, obtained by counting the distinct number of product_id per order_item."

  - name: int_localbike_dataset__products
    description: "This model adds category_name from stg_localbike_dataset__categories to stg_localbike_dataset__products."
    columns:
    - name: product_id
      description: "Primary key, unique identifier for each product."
      tests:
          - unique
          - not_null

